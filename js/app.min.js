/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ([
/* 0 */,
/* 1 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   burgerClose: () => (/* binding */ burgerClose),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const burger = () => {
    const menuIcon = document.querySelector('.header__menu-icon');
    const menuBody = document.querySelector('.menu__body');
    const body = document.querySelector('body');

    if (menuIcon) {
        menuIcon.addEventListener("click", function () {
            body.classList.toggle('_lock');
            menuIcon.classList.toggle('_active');
            menuBody.classList.toggle('_active');

            if (!menuIcon.classList.contains('_active')) {
                menuIcon.classList.add('_inactive');
            } else {
                menuIcon.classList.remove('_inactive');
            }
        })
    }
}

const burgerClose = () => {
    const menuIcon = document.querySelector('.header__menu-icon');
    const menuBody = document.querySelector('.menu__body');
    const body = document.querySelector('body');

    if (menuIcon.classList.contains('_active')) {
        body.classList.remove('_lock');
        menuIcon.classList.remove('_active');
        menuIcon.classList.add('_inactive');
        menuBody.classList.remove('_active');
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (burger);

/***/ }),
/* 2 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const appHeight = () => {
    const doc = document.documentElement;
    doc.style.setProperty('--app-height', `${window.innerHeight}px`);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (appHeight);

/***/ }),
/* 3 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   modalClose: () => (/* binding */ modalClose)
/* harmony export */ });
const modal = () => {
    const popupLinks = document.querySelectorAll('[data-modal]'); //Ссылка на Popup
    const body = document.querySelector('body'); // Тег body
    const lockPadding = document.querySelectorAll('.lock-padding');
    const timeout = 800; //Равна длительности анимации в CSS

    let unlock = true;

    if (popupLinks.length > 0) {
        for (let index = 0; index < popupLinks.length; index++) {
            const popupLink = popupLinks[index];
            popupLink.addEventListener('click', function (e) {
                const popupName = popupLink.dataset.modal;
                const currentPopup = document.getElementById(popupName);
                popupOpen(currentPopup);
                e.preventDefault();
            });
        }
    }

    const popupCloseIcon = document.querySelectorAll('.modal__close');
    if (popupCloseIcon.length > 0) {
        for (let index = 0; index < popupCloseIcon.length; index++) {
            const el = popupCloseIcon[index];
            el.addEventListener('click', function (e) {
                popupClose(el.closest('.modal'));
                e.preventDefault();
            });
        }
    }

    const popupOpen = (currentPopup) => {
        if (currentPopup && unlock) {
            const popupActive = document.querySelector('.modal._active');
            if (popupActive) {
                popupClose(popupActive, false);
            } else {
                bodyLock();
                //hideMenu()
            }
            currentPopup.classList.add('_active');
            currentPopup.addEventListener('click', function (e) {
                if (!e.target.closest('.modal__content')) {
                    popupClose(e.target.closest('popup'));
                }
            });
        }
    }

    const popupClose = (popupActive, doUnlock = true) => {
        if (unlock) {
            const popupActive = document.querySelector('.modal._active');
            popupActive.classList.remove('_active');
            if (doUnlock) {
                bodyUnlock();
            }
        }
    }

    const bodyLock = () => {
        const lockPaddingValue = window.innerWidth - document.querySelector('.wrapper').offsetWidth + 'px';

        if (lockPadding.length > 0) {
            for (let index = 0; index < lockPadding.length; index++) {
                const el = lockPadding[index];
                el.style.paddingRight = lockPaddingValue;
            }
        }
        body.style.paddingRight = lockPaddingValue;
        body.classList.add('_lock');

        unlock = false;
        setTimeout(function () {
            unlock = true;
        }, timeout);
    }

    const bodyUnlock = () => {
        setTimeout(function () {
            if (lockPadding.length > 0) {
                for (let index = 0; index < lockPadding.length; index++) {
                    const el = lockPadding[index];
                    el.style.paddingRight = '0px';
                }
            }
            body.style.paddingRight = '0px';
            body.classList.remove('_lock');
        }, timeout);

        unlock = false;
        setTimeout(function () {
            unlock = true;
        }, timeout);
    }

    //const hideMenu = () => {
    //    const menu = document.querySelector('.menu');
    //    const menuIcon = document.querySelector('.menu-icon');
    //    const openMenu = document.querySelector(".btn-open");
    //    const closeMenu = document.querySelector(".btn-close");

    //    if (menu.classList.contains('_active')) {
    //        menu.classList.remove('_active')
    //    }

    //    if (menuIcon.classList.contains('_active')) {
    //        menuIcon.classList.remove('_active')
    //        openMenu.classList.toggle("btn-back");
    //        closeMenu.classList.toggle("btn-front");
    //    }
    //}
}

const modalClose = () => {
    const body = document.querySelector('body');
    const modals = document.querySelectorAll('.modal');
    const timeout = 800;

    setTimeout(function () {
        body.classList.remove('_lock');
        body.style.paddingRight = '0px';
    }, timeout);

    if (modals.length) {
        modals.forEach((modal) => {
            modal.classList.remove('_active');
        });
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (modal);

/***/ })
/******/ 	]);
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_functions_burger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var _modules_functions_appHeight_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
/* harmony import */ var _modules_page_modal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);



// import checkbox from './modules/form/checkbox.js';
// import radio from './modules/form/radio.js';

(0,_modules_functions_burger_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
(0,_modules_functions_appHeight_js__WEBPACK_IMPORTED_MODULE_1__["default"])();
(0,_modules_page_modal_js__WEBPACK_IMPORTED_MODULE_2__["default"])();
// radio();
// checkbox();

const showScrollToTopBtn = () => {
    const btn = document.querySelector('.footer__up');

    if (window.scrollY >= 200) {
        btn.classList.add('active');
    } else {
        btn.classList.remove('active');
    }
}
showScrollToTopBtn();

const scrollToTop = () => {
    window.scrollTo({
        top: 0,
        behavior: "smooth"
    });
}

window.addEventListener('scroll', () => {
    showScrollToTopBtn();
});

window.addEventListener('resize', () => {
    (0,_modules_functions_appHeight_js__WEBPACK_IMPORTED_MODULE_1__["default"])();
});

document.addEventListener('click', (e) => {
    const scrollToTopBtn = e.target.closest('.footer__up');
    if (scrollToTopBtn) {
        scrollToTop();
    }

    const menuCloseBtn = e.target.closest('.menu__close');
    if (menuCloseBtn) {
        (0,_modules_functions_burger_js__WEBPACK_IMPORTED_MODULE_0__.burgerClose)();
    }

    const modalBtn = e.target.closest('[data-modal]');
    if (modalBtn) {
        (0,_modules_functions_burger_js__WEBPACK_IMPORTED_MODULE_0__.burgerClose)();
    }
});

document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
        (0,_modules_functions_burger_js__WEBPACK_IMPORTED_MODULE_0__.burgerClose)();
        (0,_modules_page_modal_js__WEBPACK_IMPORTED_MODULE_2__.modalClose)();
    }
});
})();

/******/ })()
;